import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.SwingConstants;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;


public class Calculator implements ActionListener {
	
	boolean Operator=false,plus=false,minu=false,multi=false,divi=false,check=false,checker=false,rcheck=false;
	String oldValue,newValue,cValue;
	float nresult,cresult,ovalue;
	
	
JFrame jf;
JLabel displayLabel;
JButton sevenButton,eightButton,nineButton,fourButton,fiveButton,sixButton,oneButton,twoButton,
threeButton,dotButton,zeroButton,equalButton,divisionButton,multiButton,minuButton,plusButton,clearButton;
	

	public Calculator() {
		
		jf=new JFrame("Adhnan's Calculator");
		
		jf.setLayout(null);
		jf.setSize(600, 600);
		jf.setLocation(375, 90);
		
		
		displayLabel=new JLabel("");
		displayLabel.setBounds(30, 50, 540, 40);
		displayLabel.setBackground(null);
		displayLabel.setOpaque(true);
		displayLabel.setHorizontalAlignment(SwingConstants.RIGHT); 
		displayLabel.setForeground(Color.BLACK);
		displayLabel.setFont(new Font("Arial", Font.PLAIN, 40));
		displayLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 2));
		jf.add(displayLabel);
		
		
		
		sevenButton=new JButton("7");
		sevenButton.setBounds(30, 130, 80, 80);
		sevenButton.setBackground(Color.WHITE);
		sevenButton.setFont(new Font("Arial", Font.PLAIN, 40));
		sevenButton.addActionListener(this);
		sevenButton.setOpaque(true);
		jf.add(sevenButton);
		
		eightButton=new JButton("8");
		eightButton.setBounds(140, 130, 80, 80);
		eightButton.setBackground(Color.WHITE);
		eightButton.setFont(new Font("Arial", Font.PLAIN, 40));
		eightButton.addActionListener(this);
		eightButton.setOpaque(true);
		jf.add(eightButton);
		
		nineButton=new JButton("9");
		nineButton.setBounds(250,130, 80, 80);
		nineButton.setBackground(Color.WHITE);
		nineButton.addActionListener(this);
		nineButton.setFont(new Font("Arial", Font.PLAIN, 40));
		nineButton.setOpaque(true);
		jf.add(nineButton);
		
		
		fourButton=new JButton("4");
		fourButton.setBounds(30, 240, 80, 80);
		fourButton.setBackground(Color.WHITE);
		fourButton.setFont(new Font("Arial", Font.PLAIN, 40));
		fourButton.addActionListener(this);
		fourButton.setOpaque(true);
		jf.add(fourButton);
		
		fiveButton=new JButton("5");
		fiveButton.setBounds(140, 240, 80, 80);
		fiveButton.setBackground(Color.WHITE);
		fiveButton.setFont(new Font("Arial", Font.PLAIN, 40));
		fiveButton.addActionListener(this);
		fiveButton.setOpaque(true);
		jf.add(fiveButton);
		
		sixButton=new JButton("6");
		sixButton.setBounds(250,240, 80, 80);
		sixButton.setBackground(Color.WHITE);
		sixButton.addActionListener(this);
		sixButton.setFont(new Font("Arial", Font.PLAIN, 40));
		sixButton.setOpaque(true);
		jf.add(sixButton);
		
		
		oneButton=new JButton("1");
		oneButton.setBounds(30, 350, 80, 80);
		oneButton.setBackground(Color.WHITE);
		oneButton.setFont(new Font("Arial", Font.PLAIN, 40));
		oneButton.addActionListener(this);
		oneButton.setOpaque(true);
		jf.add(oneButton);
		
		twoButton=new JButton("2");
		twoButton.setBounds(140, 350, 80, 80);
		twoButton.setBackground(Color.WHITE);
		twoButton.setFont(new Font("Arial", Font.PLAIN, 40));
		twoButton.addActionListener(this);
		twoButton.setOpaque(true);
		jf.add(twoButton);
		
		threeButton=new JButton("3");
		threeButton.setBounds(250,350, 80, 80);
		threeButton.setBackground(Color.WHITE);
		threeButton.setFont(new Font("Arial", Font.PLAIN, 40));
		threeButton.addActionListener(this);
		threeButton.setOpaque(true);
		jf.add(threeButton);
		
		dotButton=new JButton(".");
		dotButton.setBounds(30, 460, 80, 80);
		dotButton.setBackground(Color.WHITE);
		dotButton.setFont(new Font("Arial", Font.PLAIN, 40));
		dotButton.addActionListener(this);
		dotButton.setOpaque(true);
		jf.add(dotButton);
		
		zeroButton=new JButton("0");
		zeroButton.setBounds(140, 460, 80, 80);
		zeroButton.setBackground(Color.WHITE);
		zeroButton.setFont(new Font("Arial", Font.PLAIN, 40));
		zeroButton.addActionListener(this);
		zeroButton.setOpaque(true);
		jf.add(zeroButton);
		
		equalButton=new JButton("=");
		equalButton.setBounds(250,460, 80, 80);
		equalButton.setBackground(Color.WHITE);
		equalButton.setFont(new Font("Arial", Font.PLAIN, 40));
		equalButton.addActionListener(this);
		equalButton.setOpaque(true);
		jf.add(equalButton);
		
		
		
		
		divisionButton=new JButton("รท");
		divisionButton.setBounds(360,130, 80, 80);
		divisionButton.setBackground(Color.WHITE);
		divisionButton.setFont(new Font("Arial", Font.PLAIN, 40));
		divisionButton.addActionListener(this);
		divisionButton.setOpaque(true);
		jf.add(divisionButton);
		
		multiButton=new JButton("x");
		multiButton.setBounds(360,240, 80, 80);
		multiButton.setBackground(Color.WHITE);
		multiButton.setFont(new Font("Arial", Font.PLAIN, 40));
		multiButton.addActionListener(this);
		multiButton.setOpaque(true);
		jf.add( multiButton);

		minuButton=new JButton("-");
		minuButton.setBounds(360,350, 80, 80);
		minuButton.setBackground(Color.WHITE);
		minuButton.setFont(new Font("Arial", Font.PLAIN, 40));
		minuButton.addActionListener(this);
		minuButton.setOpaque(true);
		jf.add( minuButton);
		
		plusButton=new JButton("+");
		plusButton.setBounds(360,460, 80, 80);
		plusButton.setBackground(Color.WHITE);
		plusButton.setFont(new Font("Arial", Font.PLAIN, 40));
		plusButton.addActionListener(this);
		plusButton.setOpaque(true);
		jf.add(plusButton);
		
		clearButton=new JButton("AC");
		clearButton.setBounds(470,130, 80, 410);
		clearButton.setBackground(Color.WHITE);
		clearButton.setFont(new Font("Arial", Font.PLAIN, 30));
		clearButton.addActionListener(this);
		clearButton.setOpaque(true);
		jf.add(clearButton);
		
		
		
		jf.setVisible(true);
		jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		
		
		
	}
	
	public static void main(String[] args) {
		new Calculator();
	}

	
	public void actionPerformed(ActionEvent e) {
		
		float newValueF,oldValueF,result,cValueF;
		
		if(e.getSource()==sevenButton) {
			if(Operator) {
				displayLabel.setText("7");
				Operator=false;
			}else {
				displayLabel.setText(displayLabel.getText()+"7");
			}
			}
		
		else if(e.getSource()==eightButton){
			if(Operator) {
				displayLabel.setText("8");
				Operator=false;
			}else {
				displayLabel.setText(displayLabel.getText()+"8");
			}
			}
		
		else if(e.getSource()==nineButton){
			if(Operator) {
				displayLabel.setText("9");
				Operator=false;
			}else {
				displayLabel.setText(displayLabel.getText()+"9");
			}
			}
		
		else if(e.getSource()==fourButton){
			if(Operator) {
				displayLabel.setText("4");
				Operator=false;
			}else {
				displayLabel.setText(displayLabel.getText()+"4");
			}
			}
		
		else if(e.getSource()==fiveButton){
			if(Operator) {
				displayLabel.setText("5");
				Operator=false;
			}else {
				displayLabel.setText(displayLabel.getText()+"5");
			}
			}
		
		else if(e.getSource()==sixButton){
			if(Operator) {
				displayLabel.setText("6");
				Operator=false;
			}else {
				displayLabel.setText(displayLabel.getText()+"6");
			}
			}
		
		else if(e.getSource()==oneButton){
			if(Operator) {
				displayLabel.setText("1");
				Operator=false;
			}else {
				displayLabel.setText(displayLabel.getText()+"1");
			}
			}
		
		else if(e.getSource()==twoButton){
			if(Operator) {
				displayLabel.setText("2");
				Operator=false;
			}else {
				displayLabel.setText(displayLabel.getText()+"2");
			}
			}
		
		else if(e.getSource()==threeButton){
			if(Operator) {
				displayLabel.setText("3");
				Operator=false;
			}else {
				displayLabel.setText(displayLabel.getText()+"3");
			}
			}
		
		else if(e.getSource()==dotButton){
			if(Operator) {
				displayLabel.setText(".");
				Operator=false;
			}else {
				displayLabel.setText(displayLabel.getText()+".");
			}
		}
		
		else if(e.getSource()==zeroButton){
			if(Operator) {
				displayLabel.setText("0");
				Operator=false;
			}else {
				displayLabel.setText(displayLabel.getText()+"0");
			}
		}
		else if(e.getSource()==equalButton){
			
			if(plus) {
				if(check==false) {
					newValue=displayLabel.getText();
					newValueF=Float.parseFloat(newValue);
					
					result=ovalue+newValueF;
					displayLabel.setText(result+"");
					plus=false;
				}
				
				else if(check==true) {
					
					cValue=displayLabel.getText();
					cValueF=Float.parseFloat(cValue);
					nresult=cresult+cValueF;
					displayLabel.setText(nresult+"");
				}
				
			}
			else if(minu) {
				if(check==false) {
					newValue=displayLabel.getText();
					newValueF=Float.parseFloat(newValue);
					
					result=newValueF-ovalue;
					displayLabel.setText(result+"");
					minu=false;
				}
				
				else if(check==true) {
					cValue=displayLabel.getText();
					cValueF=Float.parseFloat(cValue);
					nresult=cresult-cValueF;
					displayLabel.setText(nresult+"");
				}
			}
			else if(multi) {
				if(check==false) {
					newValue=displayLabel.getText();
					newValueF=Float.parseFloat(newValue);
					
					result=ovalue*newValueF;
					displayLabel.setText(result+"");
					multi=false;
				}
				
				else if(check==true) {
					cValue=displayLabel.getText();
					cValueF=Float.parseFloat(cValue);
					nresult=cresult*cValueF;
					displayLabel.setText(nresult+"");
				}
				
			}
			else if (divi) {
				if(check==false) {
					newValue=displayLabel.getText();
					newValueF=Float.parseFloat(newValue);
					
					result=ovalue/newValueF;
					displayLabel.setText(result+"");
					divi=false;
				}
				
				else if(check==true) {
					cValue=displayLabel.getText();
					cValueF=Float.parseFloat(cValue);
					nresult=cresult/cValueF;
					displayLabel.setText(nresult+"");
				}
			}

			
		}
		else if(e.getSource()==plusButton){
			if(checker==false) {
				plus=true;
				Operator=true;
				oldValue=displayLabel.getText();
				oldValueF=Float.parseFloat(oldValue);
				ovalue=oldValueF;
				checker=true;
			}
			else if (checker==true) {
				plus=true;
				Operator=true;
				newValue=displayLabel.getText();
				newValueF=Float.parseFloat(newValue);
				result=ovalue+newValueF;
				cresult=result;
				check=true;
				
				 
				 
				 
				
			}
			
			
		}
		else if(e.getSource()==minuButton){
			if(checker==false) {
				minu=true;
				Operator=true;
				oldValue=displayLabel.getText();
				oldValueF=Float.parseFloat(oldValue);
				ovalue=oldValueF;
				checker=true;
			}
			else if (checker==true) {
				minu=true;
				Operator=true;
				newValue=displayLabel.getText();
				newValueF=Float.parseFloat(newValue);
				result=ovalue-newValueF;
				cresult=result;
				check=true;
			}
			
			
		}
		else if(e.getSource()==multiButton){
			if(checker==false) {
				multi=true;
				Operator=true;
				oldValue=displayLabel.getText();
				oldValueF=Float.parseFloat(oldValue);
				ovalue=oldValueF;

				checker=true;
			}
			else if (checker==true) {
				multi=true;
				Operator=true;
				newValue=displayLabel.getText();
				newValueF=Float.parseFloat(newValue);
				result=ovalue*newValueF;
				cresult=result;
				check=true;
			}
			
			
			
		}
		else if(e.getSource()==divisionButton){
			if(checker==false) {
				divi=true;
				Operator=true;
				oldValue=displayLabel.getText();
				oldValueF=Float.parseFloat(oldValue);
				ovalue=oldValueF;
				checker=true;
			}
			else if (checker==true) {
				divi=true;
				Operator=true;
				newValue=displayLabel.getText();
				newValueF=Float.parseFloat(newValue);
				result=ovalue/newValueF;
				cresult=result;
				check=true;
				
			}
			
			
		}
		else if(e.getSource()==clearButton){
			
			oldValueF=0;
			newValueF=0;
			cValueF=0;
			result=0;
			nresult=0;
			cresult=0;
			ovalue=0;
			cValue=null;
			oldValue=null;
			newValue=null;
			check=false;
			checker=false;
			Operator=false;
			plus=false;
			minu=false;
			multi=false;
			divi=false;
			rcheck=false;
			displayLabel.setText("");
			}
		}
	}
		


